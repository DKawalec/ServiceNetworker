extends layout

block content

  #main.pure-g(ng-controller='NoSViewController')
    header.pure-u-1-1.center
      h2 Welcome to #{title}
    #left.pure-u-1-5.panel
      h3.noselect.active(ng-model='hideForms' ng-click='hideForms = !hideForms') #[img(src='/images/triangle.png' ng-class='{rotate180: !hideForms, rotate90: hideForms}')] File uploads
      form.pure-form.pure-form-aligned.dynamic(data-ng-submit='uploadXML()' enctype='multipart/form-data' ng-class='{zeroHeight: hideForms}')
        fieldset
          legend Upload XML file(s):
          .pure-control-group
            input.pure-input-3-4(type='file' id='xmlFile' name='xmlFile' multiple required)
          .pure-control-group
            label.pure-checkbox(for='archive').
              #[input(name='archive' type='checkbox' ng-model='xmlData.archive')]
              Save data
            input.pure-input-3-4(name='archiveName' type='text' placeholder='Name to save data as' ng-model='xmlData.archiveName')
          .pure.control-group
            p.tip Choose to save data for easy access to the same NoS in the future.
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='submit') LOAD DATA
      form.pure-form.pure-form-aligned.dynamic(data-ng-submit='uploadCSV()' enctype='multipart/form-data' ng-show='nos.graph.nodes' ng-class='{zeroHeight: hideForms}')
        fieldset
          legend Upload a single CSV file:
          .pure-control-group
            input.pure-input-3-4(type='file' id='csvFile' name='csvFile' required)
          .pure-control-group
            label.pure-checkbox(for='archive').
              #[input(name='archive' type='checkbox' ng-model='csvData.archive')]
              Save data        
            input.pure-input-3-4(name='archiveName' type='text' placeholder='Name to save data as' ng-model='csvData.archiveName')
          .pure.control-group
            p.tip Only records that can be mapped to the current NoS will be displayed. Unknown node data will be ignored.
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='submit') LOAD DATA
      h3.noselect.active(ng-model='hideArchives' ng-click='hideArchives = !hideArchives') #[img(src='/images/triangle.png' ng-class='{rotate180: !hideArchives, rotate90: hideArchives}')] Archived data
      form.miniform.pure-form.pure-form-aligned.dynamic(data-ng-submit='loadNoS()' ng-class='{zeroHeight: hideArchives}')
        fieldset
          legend NoS archives:
          .pure-control-group
            select(ng-model='nosArchiveSelection' ng-options='option for option in availableNoS')
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='submit') LOAD DATA
      form.miniform.pure-form.pure-form-aligned.dynamic(data-ng-submit='loadDNoS()' ng-show='nos.graph.nodes' ng-class='{zeroHeight: hideArchives}')
        fieldset
          legend DNoS archives:
          .pure-control-group
            select(ng-model='dnosArchivesSelection' ng-options='option for option in availableDNoS')
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='submit') LOAD DATA
      h3.noselect.active(ng-model='hideTimeframes' ng-click='hideTimeframes = !hideTimeframes') #[img(src='/images/triangle.png' ng-class='{rotate180: !hideTimeframes, rotate90: hideTimeframes}')] Timeframe selection
      form.pure-form.pure-form-aligned.dynamic(ng-class='{zeroHeight: hideTimeframes}') 
        fieldset
          .pure-control-group
            label(for='numberOfTimeframes') Number of timeframes:
            select(name='numberOfTimeframes' ng-model='numberOfTimeframes' ng-options='option for option in availableTimeframes')
          .pure-control-group
            label(for='selectedTimeframe') Time start:
            input.pure-input-3-4(type='range' min='{{first}}' max='{{last}}' step='{{stats.timeframeLength}}' ng-model='timeStart')
          .pure-control-group
            label(for='selectedTimeframe') Time end:
            input.pure-input-3-4(type='range' min='{{first}}' max='{{last}}' step='{{stats.timeframeLength}}' ng-model='timeEnd')
          .pure.control-group
            p.tip If you're experiencing low performance, try working with shorter timeframes or load smaller datasets.
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='button' ng-click='applyTimeframe()') APPLY
      h3.noselect.active(ng-model='hideAlgorithms' ng-click='hideAlgorithms = !hideAlgorithms') #[img(src='/images/triangle.png' ng-class='{rotate180: !hideAlgorithms, rotate90: hideAlgorithms}')] Algorithm runner
      form.miniform.pure-form.pure-form-aligned.dynamic(data-ng-submit='runComputation()' ng-class='{zeroHeight: hideAlgorithms}')
        fieldset
          legend Available algorithms:
          .pure-control-group
            select(ng-model='algorithmSelection' ng-options='option.name for option in availableAlgorithms')
          .pure-control-group
            button.pure-button.pure-input-2-3.pure-button-primary(type='submit') COMPUTE
    #center.pure-u-3-5
      d3-svg(data='nos.graph.nodes', link='nos.graph.connections', timeframe='dnos.currentConnections')
    #right.pure-u-1-5.panel
      h3 NoS statistics
      p Load XML with service data to view
      table.pure-table
        tbody
          tr.pure-table-odd
            td Number of services
            td {{stats.numberOfServices || '-'}}
          tr
            td Total inputs
            td {{stats.inputsTotal || '-'}}
          tr.pure-table-odd
            td Inputs average
            td {{stats.inputsAverage || '-'}}
          tr
            td Total outputs
            td {{stats.outputsTotal || '-'}}
          tr.pure-table-odd
            td Outputs average
            td {{stats.outputsAverage || '-'}}
          tr
            td Total connections
            td {{stats.connectionsTotal || '-'}}
          tr.pure-table-odd
            td Connections average
            td {{stats.connectionsAverage || '-'}}
      h3 DNoS statistics
      p Load CSV with service usage data to view
      table.pure-table
        tbody
          tr
            td Number of calls
            td {{stats.totalCalls || '-'}}
          tr.pure-table-odd
            td Calls to this repository
            td {{stats.repositoryCalls || '-'}}
          tr
            td Usable data percentage
            td {{stats.usableData || '-'}}
          tr.pure-table-odd
            td Total recorded time
            td {{(stats.totalTime || '-') + ' [ms]'}}
          tr
            td Timeframe length
            td {{(stats.timeframeLength || '-') + ' [ms]'}}
    footer.pure-u-1-1.center
      p.
        (c) 2015-2016 Dorota Kawalec
        #[a(href='mailto:179317@student.pwr.wroc.pl') 179317@student.pwr.wroc.pl]
        W-08 Wydział Informatyki i Zarządzania Politechnika Wrocławska
  